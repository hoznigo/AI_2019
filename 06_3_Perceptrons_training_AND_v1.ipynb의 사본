{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"06_3_Perceptrons_training_AND_v1.ipynb의 사본","version":"0.3.2","provenance":[{"file_id":"1CoWmFvPZ4hQ15hIFGTgujYD-i4fAlx7n","timestamp":1555985994639},{"file_id":"1gzr3r-ZuSV-qNJJuim6tFus9kqVXaLC3","timestamp":1554950904494}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"IEh7jdAcD3Dv","colab_type":"text"},"cell_type":"markdown","source":["### Perceptrons - Training"]},{"metadata":{"id":"KrEed6J9D3Dz","colab_type":"text"},"cell_type":"markdown","source":["Note for 717005@ Hallym University !"]},{"metadata":{"id":"hAYz7mUFD3D0","colab_type":"text"},"cell_type":"markdown","source":["* Make a prediction with weights"]},{"metadata":{"id":"PjU1fdEoD3D1","colab_type":"code","colab":{}},"cell_type":"code","source":["def predict(X, w):\n","    bias = w[0]\n","    activation = bias + w[1]* X[0] + w[2]* X[1]\n","    if activation >= 0.0:\n","        return 1.0\n","    else:\n","        return 0.0 # 6_2와는 다르게 w의 값이 주어지지 아니하였다."],"execution_count":0,"outputs":[]},{"metadata":{"id":"ow1B2zp4D3D9","colab_type":"text"},"cell_type":"markdown","source":["* Estimate Perceptron weights using stochastic gradient descent"]},{"metadata":{"id":"G4Do5H6dD3D-","colab_type":"code","colab":{}},"cell_type":"code","source":["def train_weights(train, l_rate, n_epoch): # n_epoch : 시도 하는 횟수\n","    weights = [0, 0, 0] # weights = [0.0 for i in range(len(train[0]))] 이전 code\n","    print(weights)\n","    print(\"--------------------------------------------\")\n","    \n","    vb = []\n","    vw0 = []\n","    vw1 = []\n","    \n","    for epoch in range(n_epoch):\n","        sum_error = 0.0\n","        for row in train:\n","            prediction = predict(row, weights) # computer가 정한 임의의 weights\n","            jd = row[-1] # answer는 -1을 하는 것이다.\n","            error = jd - prediction # error = row[-1] - prediction\n","            sum_error += error**2\n","            \n","            weights[0] = weights[0] + l_rate * error # running rate의 개념 / bias\n","            for i in range(len(row)-1):\n","                weights[i + 1] = weights[i + 1] + l_rate * error * row[i] # weights\n","            \n","            vb.append(weights[0])\n","            vw0.append(weights[1])\n","            vw1.append(weights[2])\n","            \n","        print('epoch={}, error={}'.format(epoch, sum_error))\n","    return weights, vb, vw0, vw1"],"execution_count":0,"outputs":[]},{"metadata":{"id":"1UEnQx0rD3EA","colab_type":"code","colab":{}},"cell_type":"code","source":["# training set for AND gate\n","dataset = [[0, 0, 0],\n","    [1, 0, 0],\n","    [0, 1, 0],\n","    [1, 1, 1]]"],"execution_count":0,"outputs":[]},{"metadata":{"id":"WfrQk7eVD3EE","colab_type":"text"},"cell_type":"markdown","source":["* Hyperparameters"]},{"metadata":{"id":"lOBseT3yD3EF","colab_type":"code","colab":{}},"cell_type":"code","source":["l_rate = 0.1 #이 숫자가 커지면 위의 sum_error += error**2의 값이 커지게 된다.\n","n_epoch = 5"],"execution_count":0,"outputs":[]},{"metadata":{"id":"-AxxPctpD3EH","colab_type":"code","outputId":"283d5001-dfe3-49d4-dba4-ab0baf5d9f07","executionInfo":{"status":"ok","timestamp":1555985835619,"user_tz":-540,"elapsed":757,"user":{"displayName":"Hojun Kang","photoUrl":"https://lh4.googleusercontent.com/-T5iXQ3gwkEs/AAAAAAAAAAI/AAAAAAAAFvw/01W6d6oxDtY/s64/photo.jpg","userId":"10664325841753232023"}},"colab":{"base_uri":"https://localhost:8080/","height":143}},"cell_type":"code","source":["weights, vb, vw0, vw1 = train_weights(dataset, l_rate, n_epoch) #위의 train_weight에 row는 dataset이다."],"execution_count":54,"outputs":[{"output_type":"stream","text":["[0, 0, 0]\n","--------------------------------------------\n","epoch=0, error=2.0\n","epoch=1, error=3.0\n","epoch=2, error=3.0\n","epoch=3, error=0.0\n","epoch=4, error=0.0\n"],"name":"stdout"}]},{"metadata":{"id":"aFBJjlAJD3EO","colab_type":"code","outputId":"21b81a20-cb54-4f32-9ae0-bb214c1b1303","executionInfo":{"status":"ok","timestamp":1555985836037,"user_tz":-540,"elapsed":1161,"user":{"displayName":"Hojun Kang","photoUrl":"https://lh4.googleusercontent.com/-T5iXQ3gwkEs/AAAAAAAAAAI/AAAAAAAAFvw/01W6d6oxDtY/s64/photo.jpg","userId":"10664325841753232023"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["print(weights)"],"execution_count":55,"outputs":[{"output_type":"stream","text":["[-0.20000000000000004, 0.1, 0.2]\n"],"name":"stdout"}]},{"metadata":{"id":"7hQGEa5lSiCW","colab_type":"code","outputId":"590fdfb3-90fd-43f1-a660-187067bce07a","executionInfo":{"status":"ok","timestamp":1555985836040,"user_tz":-540,"elapsed":1150,"user":{"displayName":"Hojun Kang","photoUrl":"https://lh4.googleusercontent.com/-T5iXQ3gwkEs/AAAAAAAAAAI/AAAAAAAAFvw/01W6d6oxDtY/s64/photo.jpg","userId":"10664325841753232023"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["pred = predict([0, 0], weights)\n","print(pred)"],"execution_count":56,"outputs":[{"output_type":"stream","text":["0.0\n"],"name":"stdout"}]},{"metadata":{"id":"ic4bZUO9-Kkp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"952c966c-d8d9-4665-deb5-033c0946d259","executionInfo":{"status":"ok","timestamp":1555985836045,"user_tz":-540,"elapsed":1142,"user":{"displayName":"Hojun Kang","photoUrl":"https://lh4.googleusercontent.com/-T5iXQ3gwkEs/AAAAAAAAAAI/AAAAAAAAFvw/01W6d6oxDtY/s64/photo.jpg","userId":"10664325841753232023"}}},"cell_type":"code","source":["pred = predict([0.000000000000001, 1], weights)\n","print(pred)"],"execution_count":57,"outputs":[{"output_type":"stream","text":["1.0\n"],"name":"stdout"}]},{"metadata":{"id":"wtiZslhS-pae","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"94fdf48b-b8a7-4f04-d355-47ccab7e7e11","executionInfo":{"status":"ok","timestamp":1555985836047,"user_tz":-540,"elapsed":1132,"user":{"displayName":"Hojun Kang","photoUrl":"https://lh4.googleusercontent.com/-T5iXQ3gwkEs/AAAAAAAAAAI/AAAAAAAAFvw/01W6d6oxDtY/s64/photo.jpg","userId":"10664325841753232023"}}},"cell_type":"code","source":["pred = predict([1, 0.6], weights)\n","print(pred)"],"execution_count":58,"outputs":[{"output_type":"stream","text":["1.0\n"],"name":"stdout"}]},{"metadata":{"id":"NtzTGXlw-vm3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"d6d4ac4c-2b0a-4433-ebcb-5a39221ddeb0","executionInfo":{"status":"ok","timestamp":1555985836049,"user_tz":-540,"elapsed":1131,"user":{"displayName":"Hojun Kang","photoUrl":"https://lh4.googleusercontent.com/-T5iXQ3gwkEs/AAAAAAAAAAI/AAAAAAAAFvw/01W6d6oxDtY/s64/photo.jpg","userId":"10664325841753232023"}}},"cell_type":"code","source":["pred = predict([0.9, 1], weights)\n","print(pred)"],"execution_count":59,"outputs":[{"output_type":"stream","text":["1.0\n"],"name":"stdout"}]},{"metadata":{"id":"lBrwMfiHOrBS","colab_type":"code","colab":{}},"cell_type":"code","source":["import matplotlib.pyplot as plt"],"execution_count":0,"outputs":[]},{"metadata":{"id":"whO_O5u3OyLO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":287},"outputId":"b928f57f-4a18-4182-e915-3f7a3f94081b","executionInfo":{"status":"ok","timestamp":1555985836054,"user_tz":-540,"elapsed":1118,"user":{"displayName":"Hojun Kang","photoUrl":"https://lh4.googleusercontent.com/-T5iXQ3gwkEs/AAAAAAAAAAI/AAAAAAAAFvw/01W6d6oxDtY/s64/photo.jpg","userId":"10664325841753232023"}}},"cell_type":"code","source":["plt.plot(vb ,'r')\n","plt.plot(vw0, 'g')\n","plt.plot(vw1, 'b')"],"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7fe044a5c860>]"]},"metadata":{"tags":[]},"execution_count":61},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"QLm1P2AcD3ES","colab_type":"text"},"cell_type":"markdown","source":["* Why ?"]},{"metadata":{"id":"PXvZZbJAD3ET","colab_type":"text"},"cell_type":"markdown","source":["partial derivative with respect to m"]},{"metadata":{"id":"gHpqyyHYD3EU","colab_type":"text"},"cell_type":"markdown","source":["$$ \\frac{\\partial J(m,b)}{\\partial m} =  \\frac{1}{n}\\sum_{i=1}^{n} -2 x^{(i)} (y_{i}-(mx^{(i)} + b)) \\\\\n","= \\frac{2}{n}\\sum_{i=1}^{n} x^{(i)} ((mx^{(i)} + b)-y^{(i)}) \\\\\n","= \\frac{2}{n}\\sum_{i=1}^{n} x^{(i)} (\\hat{y}^{(i)} -y^{(i)})$$"]},{"metadata":{"id":"AK5AXJ7GD3EV","colab_type":"text"},"cell_type":"markdown","source":["partial derivative with respect to b"]},{"metadata":{"id":"cn82wuLtD3EV","colab_type":"text"},"cell_type":"markdown","source":["$$ \\frac{\\partial J(m,b)}{\\partial b} =  \\frac{1}{n}\\sum_{i=1}^{n} -2  (y^{(i)}-(mx^{(i)} + b)) \\\\\n","= \\frac{-2}{n}\\sum_{i=1}^{n}  (y^{(i)}-(mx^{(i)} + b)) \\\\\n","= \\frac{2}{n}\\sum_{i=1}^{n}  (\\hat{y}^{(i)}-y^{(i)}) \\\\ $$\n"]},{"metadata":{"id":"5aoO6c_FD3EW","colab_type":"text"},"cell_type":"markdown","source":["Partial derivatives : https://www.mathsisfun.com/calculus/derivatives-partial.html"]},{"metadata":{"id":"QB17m8dbD3EX","colab_type":"text"},"cell_type":"markdown","source":["* References"]},{"metadata":{"id":"2q5i-2JtD3EX","colab_type":"text"},"cell_type":"markdown","source":["```\n","https://machinelearningmastery.com/implement-perceptron-algorithm-scratch-python/\n","```"]}]}